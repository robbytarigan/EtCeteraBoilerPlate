//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NorthwindClient.NwServices {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Shipper", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class Shipper : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShipperIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShipperId {
            get {
                return this.ShipperIdField;
            }
            set {
                if ((this.ShipperIdField.Equals(value) != true)) {
                    this.ShipperIdField = value;
                    this.RaisePropertyChanged("ShipperId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NwServices.IShipperService")]
    public interface IShipperService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShipperService/GetShippers", ReplyAction="http://tempuri.org/IShipperService/GetShippersResponse")]
        NorthwindClient.NwServices.Shipper[] GetShippers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShipperService/GetShipper", ReplyAction="http://tempuri.org/IShipperService/GetShipperResponse")]
        NorthwindClient.NwServices.Shipper GetShipper(int shipperId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShipperService/SaveShipper", ReplyAction="http://tempuri.org/IShipperService/SaveShipperResponse")]
        void SaveShipper(NorthwindClient.NwServices.Shipper shipper);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IShipperServiceChannel : NorthwindClient.NwServices.IShipperService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ShipperServiceClient : System.ServiceModel.ClientBase<NorthwindClient.NwServices.IShipperService>, NorthwindClient.NwServices.IShipperService {
        
        public ShipperServiceClient() {
        }
        
        public ShipperServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ShipperServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ShipperServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ShipperServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public NorthwindClient.NwServices.Shipper[] GetShippers() {
            return base.Channel.GetShippers();
        }
        
        public NorthwindClient.NwServices.Shipper GetShipper(int shipperId) {
            return base.Channel.GetShipper(shipperId);
        }
        
        public void SaveShipper(NorthwindClient.NwServices.Shipper shipper) {
            base.Channel.SaveShipper(shipper);
        }
    }
}
